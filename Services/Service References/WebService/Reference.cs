//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.WebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResult", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.WebService.WebAuthenticationResult))]
    public partial class AuthenticationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.WebService.UserBase UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.WebService.UserBase User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBase", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn.Entities")]
    [System.SerializableAttribute()]
    public partial class UserBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.WebService.AccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BadgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XpField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.WebService.AccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvatarUrl {
            get {
                return this.AvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarUrlField, value) != true)) {
                    this.AvatarUrlField = value;
                    this.RaisePropertyChanged("AvatarUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Badge {
            get {
                return this.BadgeField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgeField, value) != true)) {
                    this.BadgeField = value;
                    this.RaisePropertyChanged("Badge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAvatar {
            get {
                return this.HasAvatarField;
            }
            set {
                if ((this.HasAvatarField.Equals(value) != true)) {
                    this.HasAvatarField = value;
                    this.RaisePropertyChanged("HasAvatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Xp {
            get {
                return this.XpField;
            }
            set {
                if ((this.XpField.Equals(value) != true)) {
                    this.XpField = value;
                    this.RaisePropertyChanged("Xp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebAuthenticationResult", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn.Entities")]
    [System.SerializableAttribute()]
    public partial class WebAuthenticationResult : Services.WebService.AuthenticationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdField, value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessLevel", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn.Entities")]
    public enum AccessLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonitorUsers = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManageClients = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManageUsers = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PushServices = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 65520,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Moderator = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GoldModerator = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatinumModerator = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
    [System.SerializableAttribute()]
    public partial class ServiceExceptionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.WebService.ErrorCodes ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.WebService.OperationFaults FaultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.WebService.ErrorCodes ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.WebService.OperationFaults Fault {
            get {
                return this.FaultField;
            }
            set {
                if ((this.FaultField.Equals(value) != true)) {
                    this.FaultField = value;
                    this.RaisePropertyChanged("Fault");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorCodes", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
    public enum ErrorCodes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthenticationFailed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceRequired = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserRequired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SessionExpired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperationFault = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArgumentMissing = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndpointNotFound = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationFaults", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
    public enum OperationFaults : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongCredentials = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotActivated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectEmail = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistingEmail = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectPassword = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceNotFound = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SocialConflict = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessDenied = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ObjectNotFound = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitReached = 1024,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenAuthenticationResult", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn.Entities")]
    [System.SerializableAttribute()]
    public partial class TokenAuthenticationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpiresInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefreshTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.WebService.UserBase UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpiresIn {
            get {
                return this.ExpiresInField;
            }
            set {
                if ((this.ExpiresInField.Equals(value) != true)) {
                    this.ExpiresInField = value;
                    this.RaisePropertyChanged("ExpiresIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefreshToken {
            get {
                return this.RefreshTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.RefreshTokenField, value) != true)) {
                    this.RefreshTokenField = value;
                    this.RaisePropertyChanged("RefreshToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.WebService.UserBase User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCode", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn.Entities")]
    [System.SerializableAttribute()]
    public partial class UserCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CssCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublicBlockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CssCode {
            get {
                return this.CssCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CssCodeField, value) != true)) {
                    this.CssCodeField = value;
                    this.RaisePropertyChanged("CssCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublicBlocked {
            get {
                return this.IsPublicBlockedField;
            }
            set {
                if ((this.IsPublicBlockedField.Equals(value) != true)) {
                    this.IsPublicBlockedField = value;
                    this.RaisePropertyChanged("IsPublicBlocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JsCode {
            get {
                return this.JsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JsCodeField, value) != true)) {
                    this.JsCodeField = value;
                    this.RaisePropertyChanged("JsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicId {
            get {
                return this.PublicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicIdField, value) != true)) {
                    this.PublicIdField = value;
                    this.RaisePropertyChanged("PublicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceCode {
            get {
                return this.SourceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceCodeField, value) != true)) {
                    this.SourceCodeField = value;
                    this.RaisePropertyChanged("SourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Votes {
            get {
                return this.VotesField;
            }
            set {
                if ((this.VotesField.Equals(value) != true)) {
                    this.VotesField = value;
                    this.RaisePropertyChanged("Votes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebService.IWebsiteService")]
    public interface IWebsiteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/Authenticate", ReplyAction="http://tempuri.org/IWebsiteService/AuthenticateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/AuthenticateServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        Services.WebService.WebAuthenticationResult Authenticate(int userID, string os, string browser, string browserVersion, string appVersion, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/Authenticate", ReplyAction="http://tempuri.org/IWebsiteService/AuthenticateResponse")]
        System.Threading.Tasks.Task<Services.WebService.WebAuthenticationResult> AuthenticateAsync(int userID, string os, string browser, string browserVersion, string appVersion, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/AuthenticateBearer", ReplyAction="http://tempuri.org/IWebsiteService/AuthenticateBearerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/AuthenticateBearerServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        Services.WebService.TokenAuthenticationResult AuthenticateBearer(string refreshToken, string os, string browser, string browserVersion, string appVersion, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/AuthenticateBearer", ReplyAction="http://tempuri.org/IWebsiteService/AuthenticateBearerResponse")]
        System.Threading.Tasks.Task<Services.WebService.TokenAuthenticationResult> AuthenticateBearerAsync(string refreshToken, string os, string browser, string browserVersion, string appVersion, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/Register", ReplyAction="http://tempuri.org/IWebsiteService/RegisterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/RegisterServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        Services.WebService.UserBase Register(string email, string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/Register", ReplyAction="http://tempuri.org/IWebsiteService/RegisterResponse")]
        System.Threading.Tasks.Task<Services.WebService.UserBase> RegisterAsync(string email, string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/SocialAuthentication", ReplyAction="http://tempuri.org/IWebsiteService/SocialAuthenticationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/SocialAuthenticationServiceExceptionDetailFaul" +
            "t", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        Services.WebService.UserBase SocialAuthentication(string service, string serviceId, string email, string name, string avatarUrl, string accessToken, string accessTokenExtra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/SocialAuthentication", ReplyAction="http://tempuri.org/IWebsiteService/SocialAuthenticationResponse")]
        System.Threading.Tasks.Task<Services.WebService.UserBase> SocialAuthenticationAsync(string service, string serviceId, string email, string name, string avatarUrl, string accessToken, string accessTokenExtra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/DisconnectService", ReplyAction="http://tempuri.org/IWebsiteService/DisconnectServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/DisconnectServiceServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        void DisconnectService(string service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/DisconnectService", ReplyAction="http://tempuri.org/IWebsiteService/DisconnectServiceResponse")]
        System.Threading.Tasks.Task DisconnectServiceAsync(string service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/UpdateProfileAndPassword", ReplyAction="http://tempuri.org/IWebsiteService/UpdateProfileAndPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/UpdateProfileAndPasswordServiceExceptionDetail" +
            "Fault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        void UpdateProfileAndPassword(string email, string name, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/UpdateProfileAndPassword", ReplyAction="http://tempuri.org/IWebsiteService/UpdateProfileAndPasswordResponse")]
        System.Threading.Tasks.Task UpdateProfileAndPasswordAsync(string email, string name, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/UpdateProfile", ReplyAction="http://tempuri.org/IWebsiteService/UpdateProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/UpdateProfileServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        void UpdateProfile(string email, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/UpdateProfile", ReplyAction="http://tempuri.org/IWebsiteService/UpdateProfileResponse")]
        System.Threading.Tasks.Task UpdateProfileAsync(string email, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/UpdateAvatar", ReplyAction="http://tempuri.org/IWebsiteService/UpdateAvatarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/UpdateAvatarServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        void UpdateAvatar(System.IO.Stream file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/UpdateAvatar", ReplyAction="http://tempuri.org/IWebsiteService/UpdateAvatarResponse")]
        System.Threading.Tasks.Task UpdateAvatarAsync(System.IO.Stream file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/RemoveAvatar", ReplyAction="http://tempuri.org/IWebsiteService/RemoveAvatarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/RemoveAvatarServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        void RemoveAvatar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/RemoveAvatar", ReplyAction="http://tempuri.org/IWebsiteService/RemoveAvatarResponse")]
        System.Threading.Tasks.Task RemoveAvatarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/SendEmail", ReplyAction="http://tempuri.org/IWebsiteService/SendEmailResponse")]
        void SendEmail(string sender, string name, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/SendEmail", ReplyAction="http://tempuri.org/IWebsiteService/SendEmailResponse")]
        System.Threading.Tasks.Task SendEmailAsync(string sender, string name, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/ForgotPassword", ReplyAction="http://tempuri.org/IWebsiteService/ForgotPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.WebService.ServiceExceptionDetail), Action="http://tempuri.org/IWebsiteService/ForgotPasswordServiceExceptionDetailFault", Name="ServiceExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/SoloLearn")]
        void ForgotPassword(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/ForgotPassword", ReplyAction="http://tempuri.org/IWebsiteService/ForgotPasswordResponse")]
        System.Threading.Tasks.Task ForgotPasswordAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/ResetPassword", ReplyAction="http://tempuri.org/IWebsiteService/ResetPasswordResponse")]
        bool ResetPassword(int resetID, string token, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/ResetPassword", ReplyAction="http://tempuri.org/IWebsiteService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<bool> ResetPasswordAsync(int resetID, string token, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/CheckCertificate", ReplyAction="http://tempuri.org/IWebsiteService/CheckCertificateResponse")]
        void CheckCertificate(int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/CheckCertificate", ReplyAction="http://tempuri.org/IWebsiteService/CheckCertificateResponse")]
        System.Threading.Tasks.Task CheckCertificateAsync(int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/CheckCertificateOfUser", ReplyAction="http://tempuri.org/IWebsiteService/CheckCertificateOfUserResponse")]
        void CheckCertificateOfUser(int courseId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/CheckCertificateOfUser", ReplyAction="http://tempuri.org/IWebsiteService/CheckCertificateOfUserResponse")]
        System.Threading.Tasks.Task CheckCertificateOfUserAsync(int courseId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/SaveCode", ReplyAction="http://tempuri.org/IWebsiteService/SaveCodeResponse")]
        Services.WebService.UserCode SaveCode(int id, string language, string name, string code, string cssCode, string jsCode, System.Nullable<bool> isPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/SaveCode", ReplyAction="http://tempuri.org/IWebsiteService/SaveCodeResponse")]
        System.Threading.Tasks.Task<Services.WebService.UserCode> SaveCodeAsync(int id, string language, string name, string code, string cssCode, string jsCode, System.Nullable<bool> isPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/ResetProgress", ReplyAction="http://tempuri.org/IWebsiteService/ResetProgressResponse")]
        void ResetProgress(int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebsiteService/ResetProgress", ReplyAction="http://tempuri.org/IWebsiteService/ResetProgressResponse")]
        System.Threading.Tasks.Task ResetProgressAsync(int courseId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebsiteServiceChannel : Services.WebService.IWebsiteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebsiteServiceClient : System.ServiceModel.ClientBase<Services.WebService.IWebsiteService>, Services.WebService.IWebsiteService {
        
        public WebsiteServiceClient() {
        }
        
        public WebsiteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebsiteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebsiteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebsiteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Services.WebService.WebAuthenticationResult Authenticate(int userID, string os, string browser, string browserVersion, string appVersion, string ipAddress) {
            return base.Channel.Authenticate(userID, os, browser, browserVersion, appVersion, ipAddress);
        }
        
        public System.Threading.Tasks.Task<Services.WebService.WebAuthenticationResult> AuthenticateAsync(int userID, string os, string browser, string browserVersion, string appVersion, string ipAddress) {
            return base.Channel.AuthenticateAsync(userID, os, browser, browserVersion, appVersion, ipAddress);
        }
        
        public Services.WebService.TokenAuthenticationResult AuthenticateBearer(string refreshToken, string os, string browser, string browserVersion, string appVersion, string ipAddress) {
            return base.Channel.AuthenticateBearer(refreshToken, os, browser, browserVersion, appVersion, ipAddress);
        }
        
        public System.Threading.Tasks.Task<Services.WebService.TokenAuthenticationResult> AuthenticateBearerAsync(string refreshToken, string os, string browser, string browserVersion, string appVersion, string ipAddress) {
            return base.Channel.AuthenticateBearerAsync(refreshToken, os, browser, browserVersion, appVersion, ipAddress);
        }
        
        public Services.WebService.UserBase Register(string email, string name, string password) {
            return base.Channel.Register(email, name, password);
        }
        
        public System.Threading.Tasks.Task<Services.WebService.UserBase> RegisterAsync(string email, string name, string password) {
            return base.Channel.RegisterAsync(email, name, password);
        }
        
        public Services.WebService.UserBase SocialAuthentication(string service, string serviceId, string email, string name, string avatarUrl, string accessToken, string accessTokenExtra) {
            return base.Channel.SocialAuthentication(service, serviceId, email, name, avatarUrl, accessToken, accessTokenExtra);
        }
        
        public System.Threading.Tasks.Task<Services.WebService.UserBase> SocialAuthenticationAsync(string service, string serviceId, string email, string name, string avatarUrl, string accessToken, string accessTokenExtra) {
            return base.Channel.SocialAuthenticationAsync(service, serviceId, email, name, avatarUrl, accessToken, accessTokenExtra);
        }
        
        public void DisconnectService(string service) {
            base.Channel.DisconnectService(service);
        }
        
        public System.Threading.Tasks.Task DisconnectServiceAsync(string service) {
            return base.Channel.DisconnectServiceAsync(service);
        }
        
        public void UpdateProfileAndPassword(string email, string name, string oldPassword, string newPassword) {
            base.Channel.UpdateProfileAndPassword(email, name, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task UpdateProfileAndPasswordAsync(string email, string name, string oldPassword, string newPassword) {
            return base.Channel.UpdateProfileAndPasswordAsync(email, name, oldPassword, newPassword);
        }
        
        public void UpdateProfile(string email, string name) {
            base.Channel.UpdateProfile(email, name);
        }
        
        public System.Threading.Tasks.Task UpdateProfileAsync(string email, string name) {
            return base.Channel.UpdateProfileAsync(email, name);
        }
        
        public void UpdateAvatar(System.IO.Stream file) {
            base.Channel.UpdateAvatar(file);
        }
        
        public System.Threading.Tasks.Task UpdateAvatarAsync(System.IO.Stream file) {
            return base.Channel.UpdateAvatarAsync(file);
        }
        
        public void RemoveAvatar() {
            base.Channel.RemoveAvatar();
        }
        
        public System.Threading.Tasks.Task RemoveAvatarAsync() {
            return base.Channel.RemoveAvatarAsync();
        }
        
        public void SendEmail(string sender, string name, string body) {
            base.Channel.SendEmail(sender, name, body);
        }
        
        public System.Threading.Tasks.Task SendEmailAsync(string sender, string name, string body) {
            return base.Channel.SendEmailAsync(sender, name, body);
        }
        
        public void ForgotPassword(string email) {
            base.Channel.ForgotPassword(email);
        }
        
        public System.Threading.Tasks.Task ForgotPasswordAsync(string email) {
            return base.Channel.ForgotPasswordAsync(email);
        }
        
        public bool ResetPassword(int resetID, string token, string password) {
            return base.Channel.ResetPassword(resetID, token, password);
        }
        
        public System.Threading.Tasks.Task<bool> ResetPasswordAsync(int resetID, string token, string password) {
            return base.Channel.ResetPasswordAsync(resetID, token, password);
        }
        
        public void CheckCertificate(int courseId) {
            base.Channel.CheckCertificate(courseId);
        }
        
        public System.Threading.Tasks.Task CheckCertificateAsync(int courseId) {
            return base.Channel.CheckCertificateAsync(courseId);
        }
        
        public void CheckCertificateOfUser(int courseId, int userId) {
            base.Channel.CheckCertificateOfUser(courseId, userId);
        }
        
        public System.Threading.Tasks.Task CheckCertificateOfUserAsync(int courseId, int userId) {
            return base.Channel.CheckCertificateOfUserAsync(courseId, userId);
        }
        
        public Services.WebService.UserCode SaveCode(int id, string language, string name, string code, string cssCode, string jsCode, System.Nullable<bool> isPublic) {
            return base.Channel.SaveCode(id, language, name, code, cssCode, jsCode, isPublic);
        }
        
        public System.Threading.Tasks.Task<Services.WebService.UserCode> SaveCodeAsync(int id, string language, string name, string code, string cssCode, string jsCode, System.Nullable<bool> isPublic) {
            return base.Channel.SaveCodeAsync(id, language, name, code, cssCode, jsCode, isPublic);
        }
        
        public void ResetProgress(int courseId) {
            base.Channel.ResetProgress(courseId);
        }
        
        public System.Threading.Tasks.Task ResetProgressAsync(int courseId) {
            return base.Channel.ResetProgressAsync(courseId);
        }
    }
}
